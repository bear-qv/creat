var reqdo = require('./req');
var resdo = require('./res');
var streamdo = require('./stream');
var sessiondo = require('./session');
var routerdo = require('./router');
var path = require('path');

var loopdo = function(req,res){
  //req,res渲染
  var req = reqdo(req);
  var res = resdo(res);
  //注入文件头用于判断
  res.head = req.headers;
  //session解析
  getsession(req,res);  
  //req的body解析->管道函数->runtime.router
  //SOCKET的话，需要此处中断，下个版本补
  //需要加个SOCKET路由识别函数，注册SOCKET
};

//集
//stream流处理
function bodyparser (req,res){
  var data=new Buffer('');
  req.on('data',ondata);
  req.on('end',onend);
  req.on('error',error);
  req.on('close',cleanup);

  function ondata(d){
    if(req.headers['content-length']){
      var lenmax = req.headers['content-length'];
      data=Buffer.concat([data,d])
      if(data.length>lenmax && data.length>res.config.filemax){
        res.end();
      };
      //开始解析
      if(data.length==lenmax){
        req.streamdata = data;
        req = streamdo(req,data);
      };
    };
  };

  function onend(){
    routerdo(req,res);
    cleanup();
  };

  function error(err){
    res.end(err);
    cleanup();
  };

  function cleanup(){
    req.removeListener('data',ondata);
    req.removeListener('end',onend);
    req.removeListener('error',error);
    req.removeListener('close',cleanup);
  };
};

//session
function getsession(req,res){
  //对于是否有后缀的判断
  var hz = path.extname(req.url);
  //静态文件不解析SESSION
  if(hz!=''){bodyparser (req,res);}
  else{
    var cookie = req.cookie;
    //sid的注册环节
    if(req.cookie['cookiesid']){var sid = req.cookie['cookiesid']}
    else{var sid = lunx();req.cookie['cookiesid']=sid;res.cookie('cookiesid='+sid);};
    //db接手SESSION
    res.sdir = path.join(res.config.basedir,res.config.sess)
    sessiondo.get(sid,res.sdir,function(sess){
      if(sess){req.session=sess}else{req.session={}};
      res._req = req;
      bodyparser(req,res);
    });
  };
};

//随机sid
function lunx(){
  var len = 32;
  var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz123456789';
  var maxPos = $chars.length;
  var pwd = '';
  for (i = 0; i < len; i++) {
　  pwd += $chars.charAt(Math.floor(Math.random() * maxPos))
　 };
　return pwd;
}

exports = module.exports = loopdo;